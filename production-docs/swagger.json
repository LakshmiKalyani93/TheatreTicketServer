{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "TheatreTicketsServer",
        "description": "TheatreTicketsServer"
    },
    "basePath": "/api",
    "paths": {
        "/tickets": {
            "post": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Create a new instance of the model and persist it into the data source.",
                "operationId": "Ticket.create",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "Model instance data",
                        "required": false,
                        "schema": {
                            "description": "Model instance data",
                            "$ref": "#/definitions/Ticket"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful",
                        "schema": {
                            "$ref": "#/definitions/Ticket"
                        }
                    }
                },
                "deprecated": false
            },
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Find all instances of the model matched by filter from the data source.",
                "operationId": "Ticket.find",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})",
                        "required": false,
                        "type": "string",
                        "format": "JSON"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Ticket"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/tickets/{id}": {
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Find a model instance by {{id}} from the data source.",
                "operationId": "Ticket.findById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Model id",
                        "required": true,
                        "type": "string",
                        "format": "JSON"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})",
                        "required": false,
                        "type": "string",
                        "format": "JSON"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful",
                        "schema": {
                            "$ref": "#/definitions/Ticket"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Delete a model instance by {{id}} from the data source.",
                "operationId": "Ticket.deleteById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Model id",
                        "required": true,
                        "type": "string",
                        "format": "JSON"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Patch attributes for a model instance and persist it into the data source.",
                "operationId": "Ticket.prototype.patchAttributes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Ticket id",
                        "required": true,
                        "type": "string",
                        "format": "JSON"
                    },
                    {
                        "name": "data",
                        "in": "body",
                        "description": "An object of model property name/value pairs",
                        "required": false,
                        "schema": {
                            "description": "An object of model property name/value pairs",
                            "$ref": "#/definitions/Ticket"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful",
                        "schema": {
                            "$ref": "#/definitions/Ticket"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/tickets/count": {
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Count instances of the model matched by where from the data source.",
                "operationId": "Ticket.count",
                "parameters": [
                    {
                        "name": "where",
                        "in": "query",
                        "description": "Criteria to match model instances",
                        "required": false,
                        "type": "string",
                        "format": "JSON"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "number",
                                    "format": "double"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/tickets/analytics/earned": {
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Get earned analytics",
                "operationId": "Ticket.getEarnedAnalytics",
                "parameters": [
                    {
                        "name": "method",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Unknown error"
                    }
                },
                "deprecated": false
            }
        },
        "/tickets/analytics/visited": {
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Get visited analytics",
                "operationId": "Ticket.getVisitedAnalytics",
                "parameters": [
                    {
                        "name": "method",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Unknown error"
                    }
                },
                "deprecated": false
            }
        }
    },
    "tags": [
        {
            "name": "Ticket"
        }
    ],
    "consumes": [
        "application/json",
        "application/x-www-form-urlencoded",
        "application/xml",
        "text/xml"
    ],
    "produces": [
        "application/json",
        "application/xml",
        "text/xml",
        "application/javascript",
        "text/javascript"
    ],
    "definitions": {
        "Ticket": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "customerName": {
                    "type": "string"
                },
                "performanceTitle": {
                    "type": "string"
                },
                "performanceTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "ticketPrice": {
                    "type": "number",
                    "format": "double"
                },
                "created": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastUpdated": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "required": [
                "id",
                "creationDate",
                "customerName",
                "performanceTitle",
                "performanceTime",
                "ticketPrice"
            ],
            "additionalProperties": false
        },
        "x-any": {
            "properties": {}
        }
    }
}